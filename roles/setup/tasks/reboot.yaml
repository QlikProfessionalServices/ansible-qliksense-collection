---
- name: Check for pending reboot
  ansible.windows.win_reg_stat:
    path: HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager
    name: PendingFileRenameOperations
  when:
    - update_path is defined
    - installed_patch != update_version
  register: pending_file_renames

- name: Check for uninstalled Qlik Sense updates
  check_mode: no
  ansible.windows.win_powershell:
    script: (Get-Item '{{ item[4:] }}').VersionInfo
  loop: "{{ pending_file_renames.value | select('search', 'Qlik_Sense_update\\.exe$') }}"
  changed_when: false
  register: pkgcache_version
  when: pending_file_renames.value is defined

- name: Reboot without restarting services
  when: pkgcache_version.results is defined
        and pkgcache_version.results
          | map(attribute='output')
          | flatten
          | selectattr('ProductVersion', 'equalto', update_version)
          | length > 0
  block:
    - name: Get Qlik Sense service state
      ansible.windows.win_service_info:
        name: Qlik*
      register: sense_service_info

    - name: Set Qlik Sense services to manual start
      ansible.windows.win_service:
        name: "{{ item.name }}"
        start_mode: manual
      loop: "{{ sense_service_info.services | selectattr('start_mode', 'in', ['auto', 'delayed']) }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Reboot the machine
      ansible.windows.win_reboot:

    - name: Restore Qlik Sense services start mode
      ansible.windows.win_service:
        name: "{{ item.name }}"
        start_mode: "{{ item.start_mode }}"
      loop: "{{ sense_service_info.services | selectattr('start_mode', 'in', ['auto', 'delayed']) }}"
      loop_control:
        label: "{{ item.name }} [{{ item.start_mode }}]"
